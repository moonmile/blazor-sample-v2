@page "/chartjs"
@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.ChartJS.LineChart
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.Util
@using ChartJs.Blazor.ChartJS.Common;
@using ChartJs.Blazor.ChartJS.Common.Axes;

<h3>折れ線グラフ</h3>

<div>
    <ChartJsLineChart Config="@_config" Width="300" Height="200" />
</div>



@code {
    private LineConfig _config;
    protected override void OnInitialized()
    {
        _config = new LineConfig
        {
            Options = new LineOptions
            {
                Title = new OptionsTitle()
                { Display = true, Text = "気温グラフ" },
                Scales = new Scales
                {
                    xAxes = new List<CartesianAxis> {
                        new LinearCartesianAxis
                        {
                            ScaleLabel = new ScaleLabel { LabelString = "日" },
                        },
                    },
                    yAxes = new List<CartesianAxis> {
                        new LinearCartesianAxis
                        {
                            ScaleLabel = new ScaleLabel { LabelString = "気温" }
                        }
                    }
                }
            }
        };
        var _tempAverage = new LineDataset<Point> {
            BorderWidth=2, BorderColor = "green",
            PointRadius = 4, PointBorderWidth=1,
            Label = "平均"
        };
        var _tempHigh = new LineDataset<Point> { BorderWidth = 2,
            BorderColor = "red",
            PointRadius = 4,
            PointBorderWidth = 1,
            Label = "最高"
        };
        var _tempLow = new LineDataset<Point> { BorderWidth = 2,
            BorderColor = "blue",
            PointRadius = 4,
            PointBorderWidth = 1,
            Label = "最低"
        };

        // 日付,平均,最高,最低 の順
        var data = new double[]
        {
            1,25.1,26.7,22.7,
            2,25.9,30.8,21.7,
            3,23.8,28.7,20.3,
            4,23.8,27.7,20,
            5,24.9,28.1,23.2,
            6,24.8,26.9,22.8,
            7,27.2,29.3,25.1,
            8,26,28.5,23.6,
            9,23.7,26.1,22.3,
            10,25.3,28.1,22.7,
            11,27.5,31.2,24.8,
            12,26,32.5,19.9,
            13,21,25.2,18.7,
            14,22.3,23.7,20.6,
            15,20.4,22,17.7,
            16,20.7,24.6,17.4,
            17,19.3,20.6,18.1,
            18,20.4,22,19.2,
            19,24.3,29.3,21.4,
            20,26.9,31.9,23.1,
            21,25.5,29,22.5,
            22,26.6,29.9,24.9,
            23,23.2,26,22.1,
            24,24.5,27.2,21.6,
            25,25.1,27.4,23.7,
            26,25.6,31.2,23.5,
            27,26.3,30.7,23.9,
            28,26.7,31,23.9,
            29,22.9,25.6,21.3,
            30,23.2,26.5,20.4,
            31,24.8,29.6,22.4,
        };

        var rnd = new Random();
        for ( int x=0; x<31; x++ )
        {
            _tempAverage.Add(new Point { X = x, Y = data[x*4+1]});
            _tempHigh.Add(new Point { X = x, Y = data[x*4+2] });
            _tempLow.Add(new Point { X = x, Y = data[x * 4 + 3] });
        }
        _config.Data.Datasets.Add(_tempAverage);
        _config.Data.Datasets.Add(_tempHigh);
        _config.Data.Datasets.Add(_tempLow);
    }
}
